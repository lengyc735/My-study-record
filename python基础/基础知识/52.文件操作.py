"""
在python中，open函数，可以打开一个已经存在的文件，或者创建一个新文件

open(name,mode)
name:是要打开的目标文件的字符串（可以包含文件所在的具体位置）
mode:是打开文件的模式，有以下几种模式:只读，写入，追加等

注意：可以只打开或者关闭文件，可不进行操作

读写操作 write() read()
关闭 close()
"""

# 1· 打开文件 open()
f = open('test_52.txt','w')

# 2· 写入、读取文件 write() read()
f.write('hello world\n77777')

# 3· 关闭文件 close()
f.close()


'''
open()函数的mode参数有以下几种模式:
r:以只读方式打开文件，文件的指针将会放在文件的开头，这是默认模式
w:打开一个文件只用于写入，如果该文件已经存在则将其覆盖，如果该文件不存在，创建新文件
a:打开一个文件用于追加，如果文件存在，文件指针将会放在文件的结尾，也就是说，新的内容将会被写入到已有内容之后，如果文件不存在，创建新文件进行写入
'''


'''
读取文件
read()
readlines()
readline()
'''

'''
read()
文件对象.read(num)
num表示要从文件中读取的长度（单位是字节），不写num，默认读取所有数据
'''
a = open('test_52.txt')

print(a.read())

a.close()


'''
readlines()
readlines()用于读取所有行(直到结束符EOF)并返回列表，该列表可以由 Python 的 for... in ... 结构进行处理
'''
b = open('test_52.txt')

content = b.readlines()

print(content)

b.close()


'''
readline()
readline()每次读取一行，比readlines()慢得多，仅当没有足够内存可以一次读取整个文件时，才应该使用readline()
'''

c = open('test_52.txt')

content1 = c.readline()
print(f'第一行内容：{content1}')

content2 = c.readline()
print(f'第二行内容：{content2}')

c.close()


# 文件访问模式

'''
r
1.rb以二进制格式打开一个文件用于只读，文件指针将会放在文件的开头，这是默认模式
2.r+以读写方式打开一个文件，文件指针将会放在文件的开头
3.rb+以二进制格式打开一个文件用于读写，文件指针将会放在文件的开头
'''


'''
w
1.wb以二进制格式打开一个文件只用于写入，如果该文件已经存在则将其覆盖，如果该文件不存在，创建新文件
2.w+以读写方式打开一个文件，如果该文件已存在则将其覆盖，如果该文件不存在，创建新文件
3.wb+以二进制格式打开一个文件用于读写，如果该文件已存在则将其覆盖，如果该文件不存在，创建新文件
'''


'''
a
1.ab以二进制格式打开一个文件用于追加，如果文件存在，文件指针将会放在文件的结尾，也就是说，新的内容将会被写入到已有内容之后，如果文件不存在，创建新文件进行写入
2.a+以读写方式打开一个文件，如果该文件已存在，文件指针将会放在文件的结尾，文件打开时会是追加模式，如果该文件不存在，创建新文件用于读写
3.ab+以二进制格式打开一个文件用于追加，如果该文件已存在，文件指针将会放在文件的结尾，如果该文件不存在，创建新文件用于读写
'''


'''
'''